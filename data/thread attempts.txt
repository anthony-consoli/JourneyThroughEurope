          Thread cpuTurnThread = new Thread(){
          public void run(){
                    if(!gameInProgress.getCurrentPlayer().getCpuTrip().isEmpty())
        {
            for(int i=0;i<gameInProgress.getCurrentPlayer().getDicePoints();i++)
            {
                try{
                City tmpCity = gameInProgress.getCurrentPlayer().getCpuTrip().poll();
                ui.getEventHandler().respondToCityRequest(tmpCity, gameInProgress.getCurrentPlayer(), tmpCity.getName(), tmpCity.getX(), tmpCity.getY());
                Thread.sleep(2000);
                }
                catch(Exception e){
                    System.out.println(e.getMessage());
                }
            }    
        } 
            }
        };

        cpuTurnThread.start();
		
		
		
		        Task<Void> task = new Task<Void>() {
            @Override
            protected Void call() throws Exception {
                if (!gameInProgress.getCurrentPlayer().getCpuTrip().isEmpty()) {
                    for (int i = 0; i < gameInProgress.getCurrentPlayer().getDicePoints(); i++) {
                        try {
                            City tmpCity = gameInProgress.getCurrentPlayer().getCpuTrip().poll();
                            ui.getEventHandler().respondToCityRequest(tmpCity, gameInProgress.getCurrentPlayer(), tmpCity.getName(), tmpCity.getX(), tmpCity.getY());
                            Thread.sleep(2000);
                        } catch (Exception e) {
                            System.out.println(e.getMessage());
                        }
                    }
                }
                return null;
            }

        };
        Thread th = new Thread(task);
        th.setDaemon(true);
        th.start();